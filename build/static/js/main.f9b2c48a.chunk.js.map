{"version":3,"sources":["data/Atoms.js","components/DisplayTodo.js","components/InputTodo.js","App.js","index.js"],"names":["Todos","atom","key","default","dangerouslyAllowMutability","DisplayTodo","useRecoilState","todos","setTodos","style","width","List","className","component","margin","map","item","Grow","in","Paper","marginTop","ListItem","completed","background","id","button","ListItemIcon","Checkbox","onChange","todo_id","compl","new_todo","todo","prev","checkTodo","edge","checked","ListItemText","primary","todo_title","secondary","date","ListItemSecondaryAction","IconButton","onClick","filter","oldTodo","deleteTodo","theme","createMuiTheme","palette","main","InputTodo","settodos","useState","todoText","settodoText","TextField","label","e","target","value","onKeyPressCapture","newObj","uuid","Date","getFullYear","parseInt","getMonth","getDate","new_todos","InputProps","endAdornment","InputAdornment","position","App","Typography","align","variant","color","gutterBottom","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLAEaA,EAAQC,eAAK,CACtBC,IAAI,UACJC,QAAQ,GACRC,4BAA4B,I,gFCSjB,SAASC,IAAe,IAAD,EACZC,yBAAeN,GADH,mBAC/BO,EAD+B,KACxBC,EADwB,KAqBpC,OACE,yBAAKC,MAAO,CAAEC,MAAO,SACnB,kBAACC,EAAA,EAAD,CAAMC,UAAU,GAAGC,UAAU,MAAMJ,MAAO,CAAEC,MAAO,OAAQI,OAAQ,WAChEP,EAAMQ,KAAI,SAACC,GAAD,OACT,kBAACC,EAAA,EAAD,CAAMC,IAAI,GACR,kBAACC,EAAA,EAAD,CAAOV,MAAO,CAAEW,UAAW,SACzB,kBAACC,EAAA,EAAD,CAAUZ,MAAOO,EAAKM,UAAU,CAACC,WAAW,WAAW,KAAMrB,IAAKc,EAAKQ,GAAIC,QAAM,GAC/E,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAUC,SAAU,YAnBlB,SAACC,EAAQC,GACzB,IAAIC,EAAWxB,EACfwB,EAAShB,KAAI,SAAAiB,GAKX,OAJGA,EAAKR,KAAOK,IAEbG,EAAKV,WAAaU,EAAKV,WAElBU,KAETxB,GAAS,SAAAyB,GAAI,OAAIF,KAUwBG,CAAUlB,EAAKQ,GAAGR,EAAKM,YAAaa,KAAK,QAAQC,QAASpB,EAAKM,aAE5F,kBAACe,EAAA,EAAD,CAAcC,QAAStB,EAAKuB,WAAYC,UAAW,cAAgBxB,EAAKyB,OACxE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACER,KAAK,MACLS,QAAS,YAhCR,SAACf,GAClB,IAAIE,EAAWxB,EAAMsC,QAAO,SAACb,GAC3B,OAAOA,EAAKR,KAAOK,KAErBrB,GAAS,SAACsC,GAAD,OAAaf,KA6BJgB,CAAW/B,EAAKQ,MAGlB,kBAAC,IAAD,gB,iFCxCdwB,EAAQC,YAAe,CAC3BC,QAAS,CACPZ,QAAS,CACPa,KAAM,WAERX,UAAW,CACTW,KAAM,cAKG,SAASC,IAAa,IAAD,EACR9C,yBAAeN,GADP,mBAC3BO,EAD2B,KACpB8C,EADoB,OAEFC,mBAAS,IAFP,mBAE3BC,EAF2B,KAEjBC,EAFiB,KA8ClC,OACE,kBAAC,IAAD,CAAkBR,MAAOA,GACvB,6BACE,kBAACS,EAAA,EAAD,CACEhD,MAAO,CAAEC,MAAO,QAChBc,GAAG,4BACHkC,MAAM,YACN9B,SA/BW,SAAC+B,GAClBH,EAAYG,EAAEC,OAAOC,QA+BfC,kBA7BK,SAACH,GACZ,GAAgB,KAAbJ,GAEa,UAAVI,EAAEzD,IAAiB,CACrB,IAAI6D,EAAS,CACXxB,WAAYgB,EACZjC,WAAW,EACXE,GAAIwC,cACJvB,MACE,IAAIwB,MAAOC,cACX,KACCC,UAAS,IAAIF,MAAOG,YAAc,GACnC,KACA,IAAIH,MAAOI,WAEXC,EAAS,sBAAO/D,GAAP,CAAcwD,IAC3BV,GAAS,SAACrB,GAAD,OAAUsC,KACnBd,EAAY,MAaVK,MAAON,EACPgB,WAAY,CACVC,aACE,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OACvB,kBAAC/B,EAAA,EAAD,CAAYC,QAxDR,WAChB,GAAgB,KAAbW,EACH,CACE,IAAIQ,EAAS,CACXxB,WAAYgB,EACZjC,WAAW,EACXE,GAAIwC,cACJvB,MACE,IAAIwB,MAAOC,cACX,MACC,IAAID,MAAOG,SAAW,GACvB,KACA,IAAIH,MAAOI,WAEXC,EAAS,sBAAO/D,GAAP,CAAcwD,IAC3BV,GAAS,SAACrB,GAAD,OAAUsC,KACnBd,EAAY,OAyCA,kBAAC,IAAD,aC1ElB,IAAMR,EAAQC,YAAe,CAC3BC,QAAS,CACPZ,QAAS,CACPa,KAAM,WAERX,UAAW,CACTW,KAAM,cA0BGwB,MArBf,WACE,OACE,kBAAC,IAAD,CAAkB3B,MAAOA,GACvB,yBAAKpC,UAAU,OACb,kBAACgE,EAAA,EAAD,CAAYC,MAAM,SAASpE,MAAO,CAACW,UAAU,QAAS0D,QAAQ,KAAKC,MAAM,UAAUC,cAAY,GAA/F,aACa,KACC,IACd,yBACEvE,MAAO,CACLC,MAAO,MACPI,OAAQ,WAGV,kBAACsC,EAAD,MACA,kBAAC/C,EAAD,OACK,KACF,MChCb4E,IAASC,OACP,kBAAC,aAAD,KACE,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,U","file":"static/js/main.f9b2c48a.chunk.js","sourcesContent":["import { atom } from 'recoil'\r\n\r\nexport const Todos = atom({\r\n    key:'todoArr',\r\n    default:[],\r\n    dangerouslyAllowMutability: true\r\n})\r\n\r\n\r\n// var a = [1,2,3,4]\r\n// var b = [...a.map(item => item)]","import React from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport { Todos } from \"../data/Atoms\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nexport default function DisplayTodo() {\r\n  let [todos, setTodos] = useRecoilState(Todos);\r\n  \r\n  const deleteTodo = (todo_id) => {\r\n    let new_todo = todos.filter((todo) => {\r\n      return todo.id !== todo_id;\r\n    });\r\n    setTodos((oldTodo) => new_todo);\r\n  };\r\n\r\n  const checkTodo = (todo_id,compl) => {\r\n    let new_todo = todos  \r\n    new_todo.map(todo => {\r\n      if(todo.id === todo_id)\r\n      {\r\n        todo.completed = !todo.completed\r\n      }\r\n      return todo\r\n    })\r\n    setTodos(prev => new_todo)\r\n  }\r\n  return (\r\n    <div style={{ width: \"100%\" }}>\r\n      <List className=\"\" component=\"div\" style={{ width: \"100%\", margin: \"0 auto\" }}>\r\n        {todos.map((item) => (\r\n          <Grow in={true}>\r\n            <Paper style={{ marginTop: \"15px\" }}>\r\n              <ListItem style={item.completed?{background:'#dfe6e9'}:null} key={item.id} button>\r\n                <ListItemIcon>\r\n                  <Checkbox onChange={() => {checkTodo(item.id,item.completed)}} edge=\"start\" checked={item.completed} />\r\n                </ListItemIcon>\r\n                <ListItemText primary={item.todo_title} secondary={\"Added On : \" + item.date}/>\r\n                <ListItemSecondaryAction>\r\n                  <IconButton\r\n                    edge=\"end\"\r\n                    onClick={() => {\r\n                      deleteTodo(item.id);\r\n                    }}\r\n                  >\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            </Paper>\r\n          </Grow>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  createMuiTheme,\r\n  MuiThemeProvider,\r\n  TextField,\r\n  InputAdornment,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport { Todos } from \"../data/Atoms\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#00796b\",\r\n    },\r\n    secondary: {\r\n      main: \"#00796b\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default function InputTodo() {\r\n  const [todos, settodos] = useRecoilState(Todos);\r\n  const [todoText, settodoText] = useState(\"\");\r\n  const addButton = () => {\r\n    if(todoText !== \"\")\r\n    {\r\n      let newObj = {\r\n        todo_title: todoText,\r\n        completed: false,\r\n        id: uuid(),\r\n        date:\r\n          new Date().getFullYear() +\r\n          \"/\" +\r\n          (new Date().getMonth + 1) +\r\n          \"/\" +\r\n          new Date().getDate(),\r\n      };\r\n      let new_todos = [...todos, newObj];\r\n      settodos((todo) => new_todos);\r\n      settodoText(\"\");\r\n    }\r\n  };\r\n  const changeText = (e) => {\r\n    settodoText(e.target.value);\r\n  };\r\n  const keyP = (e) => {\r\n    if(todoText !== \"\")\r\n    {\r\n      if (e.key === \"Enter\") {\r\n        let newObj = {\r\n          todo_title: todoText,\r\n          completed: false,\r\n          id: uuid(),\r\n          date:\r\n            new Date().getFullYear() +\r\n            \"/\" +\r\n            (parseInt(new Date().getMonth()) + 1) +\r\n            \"/\" +\r\n            new Date().getDate(),\r\n        };\r\n        let new_todos = [...todos, newObj];\r\n        settodos((todo) => new_todos);\r\n        settodoText(\"\");\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <div>\r\n        <TextField\r\n          style={{ width: \"100%\" }}\r\n          id=\"input-with-icon-textfield\"\r\n          label=\"Add To do\"\r\n          onChange={changeText}\r\n          onKeyPressCapture={keyP}\r\n          value={todoText}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton onClick={addButton}>\r\n                  <AddCircleOutlineIcon />\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n","import React from \"react\";\n\nimport DisplayTodo from './components/DisplayTodo'\nimport {\n  createMuiTheme,\n  MuiThemeProvider,\n  Typography,\n} from \"@material-ui/core\";\nimport InputTodo from \"./components/InputTodo\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#00796b\",\n    },\n    secondary: {\n      main: \"#00796b\",\n    },\n  },\n});\n\nfunction App() {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <div className=\"App\">\n        <Typography align=\"center\" style={{marginTop:'15px'}} variant=\"h4\" color=\"primary\" gutterBottom>\n          To Do List{\" \"}\n        </Typography>{\" \"}\n        <div\n          style={{\n            width: \"50%\",\n            margin: \"0 auto\",\n          }}\n        >\n          <InputTodo />\n          <DisplayTodo/>\n        </div>{\" \"}\n      </div>{\" \"}\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {RecoilRoot} from 'recoil'\n\nReactDOM.render(\n  <RecoilRoot>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </RecoilRoot>,\n  document.getElementById('root')\n);"],"sourceRoot":""}